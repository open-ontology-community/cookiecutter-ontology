name: Ontology CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: make
        run: |
          make
      - name: validate-profile
        run: |
          echo "java -jar build/robot.jar validate-profile --input build/{{cookiecutter.ontology_short_name}}/$(cat VERSION)/{{cookiecutter.ontology_short_name}}-full.owl --profile Full -vvv --output merged-validation.txt"
          java -jar build/robot.jar validate-profile --input build/{{cookiecutter.ontology_short_name}}/$(cat VERSION)/{{cookiecutter.ontology_short_name}}-full.owl --profile Full -vvv --output merged-validation.txt
      - name: verify
        run: |
          java -jar build/robot.jar verify --input build/{{cookiecutter.ontology_short_name}}/$(cat VERSION)/{{cookiecutter.ontology_short_name}}-full.owl --queries tests/verify/*
      - uses: actions/upload-artifact@master
        with:
          name: build-artifacts
          path: build/{{cookiecutter.ontology_short_name}}
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
          architecture: x64
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - uses: actions/download-artifact@master
        with:
          name: build-artifacts
          path: build/{{cookiecutter.ontology_short_name}}
      - name: consistency
        run: |
          wget https://github.com/owlcs/releases/raw/master/HermiT/org.semanticweb.hermit-packaged-1.4.6.519-SNAPSHOT.jar -O build/hermit.jar
          OUT=$(java -jar build/hermit.jar file://`pwd`/build/{{cookiecutter.ontology_short_name}}/$(cat VERSION)/{{cookiecutter.ontology_short_name}}-full.owl -U)
          if [ "$(echo "$OUT" | tr -d '[:space:]')" = "Classesequivalentto'owl:Nothing':owl:Nothing" ];
          then
            exit 0
          fi
          echo "Ontology is inconsistent: $OUT"
          exit 1
      - name: Upload Ontology
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: |
            build/**/*
            !build/**/*.jar
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: build/report.json
      - name: Get Coverage for badge
        run : |
          echo "COVERAGE=$(head build/report.json | grep -o '"coverage": "[^"]*"' | grep -o '[^"]*\%')" >> $GITHUB_ENV
          REF=${% raw %}{{ github.ref }}{% endraw %}
          IFS='/' read -ra PATHS <<< "$REF"
          BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
          echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
      - name: Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${% raw %}{{ secrets.GIST_SECRET }}{% endraw %}
          gistID: 6d00affa9fbc89c79684d62091d96551
          filename: {{cookiecutter.ontology_short_name}}__${% raw %}{{ env.BRANCH }}{% endraw %}.json
          label: CQ Coverage
          message: {% raw %}${{ env.COVERAGE }}{% endraw %}
          color: green